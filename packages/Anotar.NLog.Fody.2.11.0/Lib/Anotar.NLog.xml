<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Anotar.NLog</name>
    </assembly>
    <members>
        <member name="T:Anotar.NLog.LogTo">
            <summary>
            Provides logging functions.
            </summary>
        </member>
        <member name="M:Anotar.NLog.LogTo.Trace">
            <summary>
            Writes the diagnostic message at the <c>Trace</c> level.
            </summary>
        </member>
        <member name="M:Anotar.NLog.LogTo.Trace(System.String,System.Object[])">
            <summary>
            Writes the diagnostic message at the <c>Trace</c> level.
            </summary>
            <param name="format">A <see langword="string" /> containing format items.</param>
            <param name="args">Arguments to format.</param>
        </member>
        <member name="M:Anotar.NLog.LogTo.TraceException(System.String,System.Exception)">
            <summary>
            Writes the diagnostic message and exception at the <c>Trace</c> level.
            </summary>
            <param name="message">A <see langword="string" /> containing format items.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:Anotar.NLog.LogTo.Debug">
            <summary>
            Writes the diagnostic message at the <c>Debug</c> level.
            </summary>
        </member>
        <member name="M:Anotar.NLog.LogTo.Debug(System.String,System.Object[])">
            <summary>
            Writes the diagnostic message at the <c>Debug</c> level.
            </summary>
            <param name="format">A <see langword="string" /> containing format items.</param>
            <param name="args">Arguments to format.</param>
        </member>
        <member name="M:Anotar.NLog.LogTo.DebugException(System.String,System.Exception)">
            <summary>
            Writes the diagnostic message and exception at the <c>Debug</c> level.
            </summary>
            <param name="message">A <see langword="string" /> containing format items.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:Anotar.NLog.LogTo.Info">
            <summary>
            Writes the diagnostic message at the <c>Info</c> level.
            </summary>
        </member>
        <member name="M:Anotar.NLog.LogTo.Info(System.String,System.Object[])">
            <summary>
            Writes the diagnostic message at the <c>Info</c> level.
            </summary>
            <param name="format">A <see langword="string" /> containing format items.</param>
            <param name="args">Arguments to format.</param>
        </member>
        <member name="M:Anotar.NLog.LogTo.InfoException(System.String,System.Exception)">
            <summary>
            Writes the diagnostic message and exception at the <c>Info</c> level.
            </summary>
            <param name="message">A <see langword="string" /> containing format items.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:Anotar.NLog.LogTo.Warn">
            <summary>
            Writes the diagnostic message at the <c>Warn</c> level.
            </summary>
        </member>
        <member name="M:Anotar.NLog.LogTo.Warn(System.String,System.Object[])">
            <summary>
            Writes the diagnostic message at the <c>Warn</c> level.
            </summary>
            <param name="format">A <see langword="string" /> containing format items.</param>
            <param name="args">Arguments to format.</param>
        </member>
        <member name="M:Anotar.NLog.LogTo.WarnException(System.String,System.Exception)">
            <summary>
            Writes the diagnostic message and exception at the <c>Warn</c> level.
            </summary>
            <param name="message">A <see langword="string" /> containing format items.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:Anotar.NLog.LogTo.Error">
            <summary>
            Writes the diagnostic message at the <c>Error</c> level.
            </summary>
        </member>
        <member name="M:Anotar.NLog.LogTo.Error(System.String,System.Object[])">
            <summary>
            Writes the diagnostic message at the <c>Error</c> level.
            </summary>
            <param name="format">A <see langword="string" /> containing format items.</param>
            <param name="args">Arguments to format.</param>
        </member>
        <member name="M:Anotar.NLog.LogTo.ErrorException(System.String,System.Exception)">
            <summary>
            Writes the diagnostic message and exception at the <c>Error</c> level.
            </summary>
            <param name="message">A <see langword="string" /> containing format items.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:Anotar.NLog.LogTo.Fatal">
            <summary>
            Writes the diagnostic message at the <c>Fatal</c> level.
            </summary>
        </member>
        <member name="M:Anotar.NLog.LogTo.Fatal(System.String,System.Object[])">
            <summary>
            Writes the diagnostic message at the <c>Fatal</c> level.
            </summary>
            <param name="format">A <see langword="string" /> containing format items.</param>
            <param name="args">Arguments to format.</param>
        </member>
        <member name="M:Anotar.NLog.LogTo.FatalException(System.String,System.Exception)">
            <summary>
            Writes the diagnostic message and exception at the <c>Fatal</c> level.
            </summary>
            <param name="message">A <see langword="string" /> containing format items.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="T:Anotar.NLog.LogToFatalOnExceptionAttribute">
            <summary>
            If an <see cref="T:System.Exception"/> occurs in the applied method then log it to <c>Fatal</c>.
            </summary>
        </member>
        <member name="T:Anotar.NLog.LogMinimalMessageAttribute">
            <summary>
            Used to suppress message prefixing.
            </summary>
        </member>
        <member name="T:Anotar.NLog.LogToDebugOnExceptionAttribute">
            <summary>
            If an <see cref="T:System.Exception"/> occurs in the applied method then log it to <c>Debug</c>.
            </summary>
        </member>
        <member name="T:Anotar.NLog.LogToErrorOnExceptionAttribute">
            <summary>
            If an <see cref="T:System.Exception"/> occurs in the applied method then log it to <c>Error</c>.
            </summary>
        </member>
        <member name="T:Anotar.NLog.LogToInfoOnExceptionAttribute">
            <summary>
            If an <see cref="T:System.Exception"/> occurs in the applied method then log it to <c>Info</c>.
            </summary>
        </member>
        <member name="T:Anotar.NLog.LogToTraceOnExceptionAttribute">
            <summary>
            If an <see cref="T:System.Exception"/> occurs in the applied method then log it to <c>Trace</c>.
            </summary>
        </member>
        <member name="T:Anotar.NLog.LogToWarnOnExceptionAttribute">
            <summary>
            If an <see cref="T:System.Exception"/> occurs in the applied method then log it to <c>Warn</c>.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.StringFormatMethodAttribute">
            <summary>
            Not for external use.
            </summary>
        </member>
        <member name="M:JetBrains.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
            <summary>
            Not for external use.
            </summary>
        </member>
    </members>
</doc>
